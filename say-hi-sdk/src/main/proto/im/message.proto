syntax = "proto3";

package com.bird.say.hi.sdk;

option java_package = "com.bird.say.hi.im.sdk";
option java_outer_classname = "SayHiMessageProto";
option java_multiple_files = true;

message Message {
    int64 message_id = 1; // 全局唯一消息Id
    int64 chat_id = 2; // 会话Id
    int64 seq_id = 3; // 会话维度递增趋势的Id，用于消息排序
    int64 from_user_id = 4; // 发送者Id
    MessageType message_type = 5; // 消息类型
    string content = 9; // 消息内容
    string show_text = 10; // 消息在会话列表中展示内容
    repeated int64 receiver_id = 6; // 可见的用户Id
    int64 expire_time = 11; // 消息过期时间
    int64 create_time = 12; // 消息创建时间
    int64 update_time = 13; // 消息更新时间
    int64 delete_time = 14; // 消息删除时间
}

enum MessageType {
    text = 0; // 文本
    image = 1; // 图片
    video = 2; // 视频
}

message SendMessageRequest {
    int64 user_id = 1;
    int64 chat_id = 2;
    MessageType message_type = 3;
    string content = 4;
}

message SendMessageResponse {
    int32 error_code = 1;
    string error_msg = 2;
}

message PullHistoryMessageRequest {
    int64 user_id = 1;
    int64 chat_id = 2;
    int64 cursor = 3;
    int32 limit = 4;
}

message PullHistoryMessageResponse {
    repeated Message message = 1; // 消息列表
}

// 删除消息请求
message DeleteMessageRequest {
    int64 chat_id = 1;
    int64 seq_id = 2;
}

// 删除消息响应
message DeleteMessageResponse {
    int32 error_code = 1;
    string error_msg = 2;
}

service MessageService {
    rpc SendMessage(SendMessageRequest) returns (SendMessageResponse);
    // 从cursor开始拉取以前的历史消息
    rpc PullHistoryMessage(PullHistoryMessageRequest) returns (PullHistoryMessageResponse);
    // 根据chatId和seqId删除消息
    rpc DeleteMessage(DeleteMessageRequest) returns (DeleteMessageResponse);
}